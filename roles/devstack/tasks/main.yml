- name: Update packages list and upgrade if needed
  apt:
    update_cache: yes
    upgrade: yes
  become: yes

- name: Install packages
  apt:
    name: "{{ packages }}"
  become: yes

- name: Add stack user
  user:
    name: stack
    shell: /bin/bash
    home: /opt/stack
  become: yes

- name: Add stack user as sudoer
  copy:
    src: stack
    dest: /etc/sudoers.d/stack
  become: yes

- name: Download repositories
  git:
    repo: "https://opendev.org/{{ item }}"
    dest: "~/{{ item.split('/')[1] }}"
    clone: yes
    force: yes
  become: true
  become_user: stack
  with_items:
    - openstack-dev/devstack
    - openstack/kuryr-kubernetes

- name: Create local pip config
  file:
    path: "~/.config/pip/"
    state: directory
  become: true
  become_user: stack

- name: Setup pip
  copy:
    src: pip.conf
    dest: "~/.config/pip/pip.conf"
  become: true
  become_user: stack

- name: Setup DevStack
  copy:
    src: local.conf
    dest: "~/devstack/local.conf"
  become: true
  become_user: stack

- name: Stack it! (manually, it will take time)
  shell: "~/devstack/stack.sh"
  become: true
  become_user: stack
  when: no

- name: Build Kuryr-Kubernetes (manually)
  shell: |
    docker build -t kuryr/controller -f controller.Dockerfile .
    docker build -t kuryr/cni -f cni.Dockerfile .
  args:
    chdir: "~/kuryr-kubernetes"
  become: true
  become_user: stack
  when: no

- name: Configure Kuryr-Kubernetes (manually)
  shell: |
    mkdir ~/kuryr-kubernetes/config
    export KURYR_K8S_KURYR_PROJECT_ID=$(openstack project list | grep service | awk '{print $2}')
    export KURYR_K8S_PROJECT_ID=$(openstack project list | grep k8s | awk '{print $2}')
    export KURYR_K8S_POD_SUBNET_ID=$(openstack subnet list | grep k8s-pod | awk '{print $2}')
    export KURYR_K8S_POD_SG=$(openstack security group list | grep pod | awk '{print $2}')
    export KURYR_K8S_SERVICE_SUBNET_ID=$(openstack subnet list | grep k8s-service | awk '{print $2}')
    export KURYR_K8S_PASSWORD=secret
    export _IP=$(ip -4 addr show enp0s3 | grep inet | awk '{print $2}' | awk -F'/' '{print $1}')
    export KURYR_K8S_API_ROOT="https://${_IP}:6443"
    export KURYR_K8S_AUTH_URL="http://${_IP}/identity"
    ~/kuryr-kubernetes/tools/generate_k8s_resource_definitions.sh ~/kuryr-kubernetes/config
  become: true
  become_user: stack
  when: no

- name: Run Kuryr-Kubernetes (manually)
  shell: |
    kubectl apply -f ~/kuryr-kubernetes/config/config_map.yml -n kube-system
    kubectl apply -f ~/kuryr-kubernetes/config/certificates_secret.yml -n kube-system
    kubectl apply -f ~/kuryr-kubernetes/config/service_account.yml -n kube-system
    kubectl apply -f ~/kuryr-kubernetes/config/controller_deployment.yml -n kube-system
    kubectl apply -f ~/kuryr-kubernetes/config/cni_ds.yml -n kube-system
  become: true
  become_user: stack
  when: no
